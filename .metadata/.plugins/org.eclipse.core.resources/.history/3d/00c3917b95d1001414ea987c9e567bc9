/*
 * IntToRoman.cpp
 *
 *  Created on: 23/03/2015
 *      Author: melalonso
 */
/*
#include <iostream>
using namespace std;

string romanUnits[] = {"I","II","III","IV","V","VI","VII","VIII","IX"};
string romanTens[] = {"X","XX","XXX","XL","L","LX","LXX","LXXX","XC"};
string romanHundreds[] = {"C","CC","CCC","CD","D","DX","DXX","DXXX","CM"};



string intToRoman(long n){
	string roman="";

	// Posible big part that uses another notation. (IV)CCC = 4300
	// Starts at 4000
	int bigPart = n / 1000;

	int xAmount = bigPart / 10;
	int lastDigit = bigPart % 10;

	while(xAmount--) roman += "X";

	if (lastDigit > 3) roman += romanUnits[lastDigit];
	else while(lastDigit--) roman += "M";


	// Small part that all numbers have.
	int smallPart = n%1000;

	int x = smallPart/100;
	roman += romanHundreds[x];
	x = smallPart/10;
	roman += romanTens[x];
	x = smallPart%10;
	roman += romanUnits[x];

	return roman;
}

int main() {
	cout << "!!!Hello World!!!" << endl;
	return 0;
}
*/

//============================================================================
// Name        : RomanToStringC++.cpp
// Author      : melalonso
// Version     :
// Copyright   : Your copyright notice
// Description : Methods for converting String number to integer value
//============================================================================

#include <iostream>
#include <sstream>
using namespace std;

#define NOT_FOUND -1
#define MIL 1000
#define MILLON 1000000
#define BILLON 1000000000

int findWordValue(string w){
	for (int i =0;i<10;i++){
		if (w==units[i]) return i;
		else if (w==teens[i]) return 10+i;
		else if (w==tens[i]) return 10*i;
		else if (w==twenties[i]) return 20+i;
		else if (w==hundreds[i]) return 100*i;
	}
	return NOT_FOUND;
}

bool isSeparator(string w){
	return w=="mil" || w=="millon" || w=="millones" ||
			w=="billon" || w=="billones";
}

int getSeparatorValue(string w){
	if (w=="mil") return MIL;
	else if (w=="millon" || w=="millones") return MILLON;
	else if (w=="billon" || w=="billones") return BILLON;
	else return NOT_FOUND;
}


int strToInt(stringstream s){
	int acc,total=0;
	string w;
	while(s >> w){
		acc = 0;
		while(!isSeparator(w)){
			acc += findWordValue(w);
			s >> w;
		}
		total += (acc * getSeparatorValue(w));
	}
	return total;
}

int main() {
	cout << "!!!Hello World!!!" << endl;
	return 0;
}


